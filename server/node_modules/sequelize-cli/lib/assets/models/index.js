"use strict";

const fs = require("fs");
const path = require("path");
const Sequelize = require("sequelize");
const basename = path.basename(__filename);
<<<<<<< HEAD:server/node_modules/sequelize-cli/lib/assets/models/index.js
const env = process.env.NODE_ENV || 'development';
const config = require(<%= configFile %>)[env];
=======
const env = process.env.NODE_ENV || "development";
const config = require(__dirname + "/../config")[env];
>>>>>>> cb1e6cd11c1178e1a0d98f11d97839e6d064adc6:server/models/index.js
const db = {};

let sequelize;
if (config.use_env_variable) {
  sequelize = new Sequelize(process.env[config.use_env_variable], config);
} else {
<<<<<<< HEAD:server/node_modules/sequelize-cli/lib/assets/models/index.js
  sequelize = new Sequelize(config.database, config.username, config.password, config);
=======
  sequelize = new Sequelize(
    config.database,
    config.username,
    config.password,
    config
  );
>>>>>>> cb1e6cd11c1178e1a0d98f11d97839e6d064adc6:server/models/index.js
}

fs.readdirSync(__dirname)
  .filter((file) => {
    return (
      file.indexOf(".") !== 0 && file !== basename && file.slice(-3) === ".js"
    );
  })
  .forEach((file) => {
    const model = require(path.join(__dirname, file))(
      sequelize,
      Sequelize.DataTypes
    );
    db[model.name] = model;
  });

Object.keys(db).forEach((modelName) => {
  if (db[modelName].associate) {
    db[modelName].associate(db);
  }
});

<<<<<<< HEAD:server/node_modules/sequelize-cli/lib/assets/models/index.js
db.sequelize = sequelize;
db.Sequelize = Sequelize;
=======
db.sequelize = sequelize; // 인스턴스
db.Sequelize = Sequelize; // 라이브러리 자체
>>>>>>> cb1e6cd11c1178e1a0d98f11d97839e6d064adc6:server/models/index.js

module.exports = db;
